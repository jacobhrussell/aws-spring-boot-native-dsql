AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Spring Boot + GraalVM + DSQL
Parameters:
  ClusterEndpoint:
    Type: String
  DbUsername:
    Type: String
Resources:
  SpringBootNativeDsqlFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 512
      FunctionName: aws-spring-boot-native-dsql
      Timeout: 15
      CodeUri: ./target/aws-spring-boot-native-dsql-0.0.1-SNAPSHOT-native-zip.zip
      Handler: NOP
      Runtime: provided.al2023
      Role: !GetAtt SpringBootNativeDsqlFunctionRole.Arn
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            TimeoutInMillis: 20000
            PayloadFormatVersion: '1.0'
      Environment:
        Variables:
          CLUSTER_ENDPOINT: !Ref ClusterEndpoint
          DB_USERNAME: !Ref DbUsername
  SpringBootNativeDsqlFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SpringBootNativeDsqlFunctionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DbConnectAdminPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "dsql:DbConnectAdmin"
                Resource: "*"
Globals:
  Api:
    EndpointConfiguration: REGIONAL
Outputs:
  SpringBootNativeDsqlApi:
    Description: URL for application
    Value: !Sub 'https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com'
    Export:
      Name: SpringBootNativeDsqlApi
